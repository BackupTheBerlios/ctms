#############################################################################
# Makefile for building: TMUS_mist
# Generated by qmake (1.07a) (Qt 3.3.3) on: Sat Mar 12 17:46:17 2005
# Project:  TMUS_mist.pro
# Template: app
# Command: $(QMAKE) -o Makefile TMUS_mist.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -Wall -Wall -W -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -Wall  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -Wall -Wall -W -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -Wall  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt3/mkspecs/default -I. -I. -I/usr/include -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/lib/ -L$(QTDIR)/lib/ -L/usr/X11R6/lib/ -lqt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = ctms_upd_db_tool.h \
		ctmsbasedialog.h \
		ctmsbutton.h \
		ctmsdatabaseconnect.h \
		ctmsencrypttext.h
SOURCES = ctms_upd_db_tool.cpp \
		ctmsbasedialog.cpp \
		ctmsbutton.cpp \
		ctmsdatabaseconnect.cpp \
		ctmsencrypttext.cpp \
		main.cpp
OBJECTS = ctms_upd_db_tool.o \
		ctmsbasedialog.o \
		ctmsbutton.o \
		ctmsdatabaseconnect.o \
		ctmsencrypttext.o \
		main.o \
		login.o
FORMS = login.ui
UICDECLS = login.h
UICIMPLS = login.cpp
SRCMOC   = moc_ctms_upd_db_tool.cpp \
		moc_ctmsencrypttext.cpp \
		moc_login.cpp
OBJMOC = moc_ctms_upd_db_tool.o \
		moc_ctmsencrypttext.o \
		moc_login.o
DIST	   = TMUS_mist.pro
QMAKE_TARGET = TMUS_mist
DESTDIR  = 
TARGET   = TMUS_mist

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: TMUS_mist.pro  /usr/lib/qt3/mkspecs/default/qmake.conf /usr/lib/qt3/lib/libqt.prl
	$(QMAKE) -o Makefile TMUS_mist.pro
qmake: 
	@$(QMAKE) -o Makefile TMUS_mist.pro

dist: 
	@mkdir -p .tmp/TMUS_mist && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/TMUS_mist/ && $(COPY_FILE) --parents german.ts .tmp/TMUS_mist/ && ( cd `dirname .tmp/TMUS_mist` && $(TAR) TMUS_mist.tar TMUS_mist && $(GZIP) TMUS_mist.tar ) && $(MOVE) `dirname .tmp/TMUS_mist`/TMUS_mist.tar.gz . && $(DEL_FILE) -r .tmp/TMUS_mist

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

ctms_upd_db_tool.o: ctms_upd_db_tool.cpp ctms_upd_db_tool.h

ctmsbasedialog.o: ctmsbasedialog.cpp 

ctmsbutton.o: ctmsbutton.cpp ctmsbutton.h

ctmsdatabaseconnect.o: ctmsdatabaseconnect.cpp ctmsdatabaseconnect.h

ctmsencrypttext.o: ctmsencrypttext.cpp ctmsencrypttext.h \
		login.h

main.o: main.cpp ctms_upd_db_tool.h \
		login.h

login.h: login.ui 
	$(UIC) login.ui -o login.h

login.cpp: login.h login.ui 
	$(UIC) login.ui -i login.h -o login.cpp

login.o: login.cpp login.h

moc_ctms_upd_db_tool.o: moc_ctms_upd_db_tool.cpp  ctms_upd_db_tool.h 

moc_ctmsencrypttext.o: moc_ctmsencrypttext.cpp  ctmsencrypttext.h login.h

moc_login.o: moc_login.cpp  login.h 

moc_ctms_upd_db_tool.cpp: $(MOC) ctms_upd_db_tool.h
	$(MOC) ctms_upd_db_tool.h -o moc_ctms_upd_db_tool.cpp

moc_ctmsencrypttext.cpp: $(MOC) ctmsencrypttext.h
	$(MOC) ctmsencrypttext.h -o moc_ctmsencrypttext.cpp

moc_login.cpp: $(MOC) login.h
	$(MOC) login.h -o moc_login.cpp

####### Install

install:  

uninstall:  

